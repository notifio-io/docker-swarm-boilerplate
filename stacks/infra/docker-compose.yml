version: "3.9"

services:
  portainer_agent:
    image: portainer/agent:2.11.1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    deploy:
      mode: global

  portainer:
    image: portainer/portainer-ce:2.11.1
    command: -H tcp://tasks.portainer_agent:9001 --tlsskipverify
    volumes:
      - portainer_data:/data
    networks:
      - agent_network
      - routing
    deploy:
      mode: replicated
      replicas: 1

  nginx:
    image: nginx:1.23.0
    deploy:
      replicas: 1
      placement:
        constraints: [ node.role == manager ]
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    networks:
      - routing
    environment:
      - APP_DOMAIN
      - APP_DEV_VPN_ADDRESS
      - APP_CERTIFICATE_PATH
      - APP_CERTIFICATE_KEY_PATH
    volumes:
      - ${APP_CERTS_HOST_LOCATION}:${APP_CERTS_CONTAINER_LOCATION}
      - ./nginx:/etc/nginx/partials
    command: >
      sh -c "envsubst '$$APP_DEV_VPN_ADDRESS ' < /etc/nginx/partials/access.conf > /etc/nginx/partials/access.conf.tmp && 
             mv /etc/nginx/partials/access.conf.tmp /etc/nginx/partials/access.conf &&
             envsubst '$$APP_CERTIFICATE_PATH $$APP_CERTIFICATE_KEY_PATH' < /etc/nginx/partials/ssl.conf > /etc/nginx/partials/ssl.conf.tmp &&
             mv /etc/nginx/partials/ssl.conf.tmp /etc/nginx/partials/ssl.conf &&
             envsubst '$$APP_DOMAIN' < /etc/nginx/partials/nginx.conf > /etc/nginx/conf.d/default.conf &&
             nginx -g 'daemon off;'"

  registry:
    image: registry:2
    deploy:
      replicas: 1
    volumes:
      - /root/registry:/registry
    environment:
      - "REGISTRY_STORAGE_DELETE_ENABLED=true"
      - "REGISTRY_AUTH=htpasswd"
      - "REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm"
      - "REGISTRY_AUTH_HTPASSWD_PATH=/registry/htpassword"
    networks:
      - routing

networks:
  agent_network:
    driver: overlay
    attachable: true
  routing:
    external: true

volumes:
  portainer_data: